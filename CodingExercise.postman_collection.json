{
	"info": {
		"_postman_id": "4cf7d887-fc3b-4b02-9de7-9b9c89644516",
		"name": "CodingExercise",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Single User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Id is 2 and first name is Janet\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(2);\r",
							"    pm.expect(jsonData.data.first_name).to.eql(\"Janet\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/users/2",
					"host": [
						"{{URL}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"UpdatedAt is equal\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.updatedAt).to.eql(\"2022-01-19T13:49:10.484Z\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/users/2",
					"host": [
						"{{URL}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function (){\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"pm.test(\"response body is empty\", function() {\r",
							"    pm.response.to.not.be.withBody;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/users/2",
					"host": [
						"{{URL}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const usernames = pm.collectionVariables.get(\"usernames\");\r",
							"const currentusername = pm.collectionVariables.get(\"username\");\r",
							"\r",
							"if (usernames && usernames.length > 0){\r",
							"    postman.setNextRequest(\"Loop Post Parameter\");\r",
							"} else {\r",
							"    postman.setNextRequest(null);\r",
							"}\r",
							"\r",
							"pm.test(\"Status code is 201\", function (){\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Name is morpheus\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(currentusername);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let usernames = pm.collectionVariables.get(\"usernames\");\r",
							"\r",
							"if(!usernames || usernames.length == 0) {\r",
							"    usernames = [\"morpheus1\", \"morpheus2\", \"morpheus3\", \"morpheus4\", \"morpheus5\"];\r",
							"}\r",
							"\r",
							"let currentUsername = usernames.shift();\r",
							"pm.collectionVariables.set(\"username\", currentUsername);\r",
							"pm.collectionVariables.set(\"usernames\", usernames);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{username}}\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/users",
					"host": [
						"{{URL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "usernames",
			"value": ""
		},
		{
			"key": "URL",
			"value": "https://reqres.in/api",
			"type": "string"
		}
	]
}